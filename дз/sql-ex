1)
SELECT model, speed, hd
FROM PC
WHERE price < 500
2)
SELECT DISTINCT maker
FROM Product
WHERE type='Printer'
3)
SELECT model, ram, screen
FROM Laptop
WHERE price > 1000
4)
SELECT *
FROM Printer 
WHERE color='y'
5)
SELECT model, speed, hd
FROM PC
WHERE (cd='24x' OR cd='12x') AND price<600
6)
SELECT DISTINCT Product.maker, Laptop.speed
FROM Product INNER JOIN Laptop ON Laptop.model=Product.model
WHERE Laptop.hd >= 10
ORDER BY maker
7)
SELECT Product.model, price
FROM Product 
JOIN PC ON Product.model=PC.model
WHERE maker='B'
UNION
SELECT Product.model, price
FROM Product
JOIN Laptop ON Product.model=Laptop.model
WHERE maker='B'
UNION
SELECT Product.model, price
FROM Product
JOIN Printer ON Product.model=Printer.model
WHERE maker='B'
ORDER BY price DESC
8)
SELECT DISTINCT maker FROM Product
WHERE type='pc'
EXCEPT
SELECT DISTINCT product.maker FROM product
WHERE type = 'laptop'
9)
Select DISTINCT Product.maker FROM Product
INNER JOIN PC ON PC.model = Product.model
WHERE speed >= 450
10)
SELECT model, price FROM Printer
Where price=(SELECT MAX(price) FROM Printer)
11)
SELECT AVG(speed) FROM PC
12)
SELECT AVG(speed) FROM Laptop
WHERE price >1000
13)
SELECT AVG(speed) FROM PC
INNER JOIN Product ON PC.model = product.model
WHERE maker ='A'
14)
SELECT Classes.class, name, Classes.country FROM Classes
JOIN Ships on Ships.class=classes.class
WHERE numGuns>=10
15)
SELECT hd FROM PC
GROUP BY hd
HAVING COUNT(*)>=2
16)
SELECT DISTINCT p1.model, p2.model, p1.speed, p1.ram 
FROM PC p1, PC p2
WHERE p1.speed = p2.speed AND p1.ram = p2.ram AND p1.model>p2.model
17)
SELECT DISTINCT pr.type, p1.model, p1.speed
FROM Laptop p1, Product pr
WHERE p1.speed < ALL(select speed FROM pc) AND type='Laptop'
18)
SELECT DISTINCT maker, price FROM Printer
JOIN Product on product.model = Printer.model
WHERE color='y' AND price = (SELECT MIN(price) FROM Printer WHERE color = 'y')
19)
SELECT maker, AVG(screen) FROM Laptop
JOIN Product ON Product.model = Laptop.model
GROUP BY maker
20)
SELECT maker, COUNT(model) 
FROM Product
WHERE type = 'pc'
GROUP BY maker
HAVING COUNT(DISTINCT model)>=3
21)
SELECT maker, MAX(price) FROM PC
JOIN Product ON PC.model = Product.model
GROUP BY maker
22)
SELECT speed, AVG(price) FROM PC
WHERE speed > 600 
GROUP BY speed
23)
SELECT maker FROM Product
JOIN PC ON PC.model = Product.model
Where speed >=750
INTERSECT
Select maker FROM Product
JOIN Laptop ON Laptop.model = Product.model
Where speed >=750
24)
WITH Out(model, price) AS ( 
  SELECT PC.model, price
  FROM PC 
  UNION ALL 
  SELECT Laptop.model, price
  FROM Laptop
  UNION ALL 
  SELECT Printer.model, price
  FROM Printer)
Select DISTINCT model FROM Out
WHERE price = ALL( SELECT MAX(price) FROM Out)
25)
SELECT DISTINCT maker FROM PRODUCT
WHERE maker IN(
SELECT maker FROM Product WHERE type = 'Printer'
)
AND
model IN(
SELECT model FROM PC
WHERE ram = (SELECT MIN(ram) FROM PC)
AND speed = (SELECT MAX(speed) FROM PC WHERE ram = (SELECT MIN(ram) FROM PC)))
26)
WITH Out(price, model) AS ( 
  SELECT price, model
  FROM PC 
  UNION ALL 
  SELECT price, model
  FROM Laptop
)
SELECT AVG(price) FROM Out
JOIN Product ON Product.model = Out.model
WHERE maker = 'A'
27)
SELECT Product.maker, AVG(hd) FROM Product
JOIN PC ON pc.model = Product.model
WHERE maker IN(
SELECT maker FROM Product
WHERE type = 'Printer'
)
Group by maker
28)
SELECT COUNT(maker) FROM Product
WHERE maker IN (SELECT maker FROM Product GROUP BY maker HAVING COUNT(model)=1)
29)
SELECT t1.point, t1.date, inc, out
FROM income_o t1 LEFT JOIN outcome_o t2 ON t1.point = t2.point
AND t1.date = t2.date
UNION
SELECT t2.point, t2.date, inc, out
FROM income_o t1 RIGHT JOIN outcome_o t2 ON t1.point = t2.point
AND t1.date = t2.date
30)
select point, date, SUM(sum_out), SUM(sum_inc)
FROM( select point, date, SUM(inc) as sum_inc, null as sum_out FROM Income GROUP BY point, date
Union
SELECT point, date, null as sum_inc, SUM(out) as sum_out FROM Outcome GROUP BY point, date ) as t
group by point, date order by point
31)
SELECT DISTINCT class, country
FROM Classes
WHERE bore>=16
32)
SELECT country,CAST(AVG((POWER(bore,3)/2)) as NUMERIC(6,2)) as mw FROM (
SELECT country, bore, name FROM classes JOIN Ships ON classes.class=ships.class
union 
SELECT country, bore, ship FROM classes JOIN Outcomes ON Classes.class=Outcomes.ship
WHERE ship=class AND ship NOT IN (SELECT name FROM ships) ) a
WHERE name IS NOT NULL
GROUP BY country
33)
SELECT o.ship FROM Battles b
LEFT Join Outcomes o On o.battle=b.name
WHERE b.Name='North Atlantic' AND result='sunk'
34)
SELECT name FROM Classes, Ships
WHERE launched >=1922 and displacement>35000 and type='bb' and
ships.class = classes.class
35)
SELECT model, type FROM Product
WHERE model NOT LIKE '%[^a-zA-Z]%' OR  model NOT LIKE '%[^0-9]%'
36)
SELECT name FROM ships
WHERE class = name
UNION
SELECT DISTINCT ship FROM outcomes,classes
WHERE classes.class = ship
37)
WITH Out(class, name) as(
SELECT class,name FROM ships
union
SElECT s.class, s.name FROM Ships s join outcomes o on s.name = o.ship
union
SElECT c.class, ship FROM Outcomes o join Classes c on o.ship = c.class
)
SELECT class FROM Out
Group By class
Having count(*)=1
38)
SELECT country FROM classes
GROUP BY country
HAVING COUNT(DISTINCT type)=2
39)
select DISTINCT ship from (SELECT DISTINCT ship, name, date, result
FROM outcomes 
JOIN battles b ON battle = name) b
where result ='damaged' 
and
EXISTS(select * FROM outcomes 
JOIN battles ON battle = name 
WHERE date>b.date and b.ship = ship
)
40)
SELECT maker, MAX(type) type FROM product
GROUP BY maker
HAVING COUNT(DISTINCT type) = 1 AND COUNT(model) > 1
41)
with t2(maker, price) AS (
SELECT maker, price FROM product p 
JOIN PC ON p.model=PC.model
UNION
SELECT maker, price FROM product p 
JOIN laptop l ON p.model=l.model
UNION
SELECT maker, price FROM product p 
JOIN Printer pr ON p.model=pr.model)

select maker, CASE WHEN MAX(CASE WHEN price is NULL THEN 1 ELSE 0 END)=0 THEN MAX(price) END m_price FROM t2
GROUP BY maker
42)
SELECT Outcomes.ship, Battles.name FROM Outcomes 
JOIN Battles ON Battles.name = Outcomes.battle
WHERE result = 'sunk'
43)
SELECT name from Battles
WHERE datepart(yy, date) not in
(
SELECT launched FROM ships
WHERE launched is not null
)
44)
SELECT name FROM Ships
WHERE name LIKE 'R%'
UNION
SELECT Ship From Outcomes
WHERE Ship LIKE 'R%'
45)
SELECT name FROM Ships
WHERE name LIKE '% % %'
UNION
SELECT ship FROM Outcomes
WHERE ship LIKE '% % %'
46)
WITH t AS (SELECT name ship, displacement, numGuns
FROM Ships s JOIN Classes c ON c.class=s.class
UNION
SELECT class ship, displacement, numGuns FROM Classes)

SELECT o.ship, displacement, numGuns FROM t
RIGHT JOIN Outcomes o
ON o.ship=t.ship
WHERE battle = 'Guadalcanal'
48)
SELECT c.class FROM Classes c
LEFT JOIN Ships s ON c.class = s.class
WHERE c.class IN (
SELECT ship FROM Outcomes 
WHERE result = 'sunk') 
OR
s.name IN (
SELECT ship FROM Outcomes 
WHERE result = 'sunk')
GROUP BY c.class
49)
SELECT name FROM Ships
JOIN Classes c ON Ships.class = c.class
WHERE bore = 16
UNION
SELECT ship FROM Outcomes o
JOIN Classes c ON o.ship = c.class
WHERE bore = 16
50)
SELECT DISTINCT battle FROM outcomes
JOIN Ships ON outcomes.ship = ships.name
WHERE class='kongo'
51)
SELECT name FROM(
SELECT name, displacement, numguns FROM Ships s 
JOIN Classes c ON s.class = c.class
UNION
SELECT ship name, displacement, numguns FROM Outcomes o
JOIN Classes c ON o.ship= c.class) d1 
JOIN (Select displacement, MAX(numGuns) numguns FROM ( 
SELECT displacement, numguns FROM Ships s 
JOIN Classes c on s.class = c.class 
UNION
SELECT displacement, numguns  FROM Outcomes o 
JOIN classes c on o.ship= c.class) f
GROUP BY displacement) d2 on d1.displacement=d2.displacement AND d1.numguns =d2.numguns
52)
SELECT DISTINCT s.name FROM ships s
JOIN classes c ON c.class = s.class
WHERE c.type = 'bb' AND c.country = 'Japan'
AND (numguns>=9 or numguns IS NULL)
AND (c.bore < 19 OR c.bore IS NULL)
AND (displacement <= 65000 OR c.displacement IS NULL)
53)
SELECT CAST(SUM(numguns)*1.0/COUNT(*) as numeric(6,2)) FROM Classes 
WHERE type='bb'
54)
SELECT CAST(SUM(numguns)*1.0/COUNT(*) as numeric(6,2))FROM(
SELECT name, class FROM Ships
UNION
SELECT ship, ship FROM Outcomes
) s JOIN Classes c on s.class=c.class
where type='bb'
55)
SELECT c.class, MIN(launched) FROM Classes c
LEFT JOIN Ships ON c.class = Ships.class
GROUP BY c.class
56)
SELECT c.class, COUNT(t.ship) FROM
(SELECT * FROM Ships s
RIGHT JOIN Outcomes o ON s.name=o.ship
WHERE result = 'sunk') as t
RIGHT JOIN classes c ON c.class = t.class or t.ship = c.class
GROUP BY c.class
59)
SELECT a.point, CASE
 WHEN out is null 
THEN inc 
ELSE inc-out 
END remain FROM  
(SELECT point, sum(inc) inc
FROM Income_o GROUP BY point) A LEFT JOIN (select point, sum(out) out FROM Outcome_o 
GROUP BY point) B on A.point=B.point
61)
SELECT sum(inc) FROM (
SELECT point, sum(inc) inc FROM
income_o
GROUP BY point
UNION
SELECT point, -sum(out) as inc FROM
outcome_o
GROUP BY point
) t
62)
SELECT
(SELECT sum(inc) FROM Income_o WHERE date<'2001.04.15')
-
(SELECT sum(out) FROM Outcome_o WHERE date<'2001.04.15')
63)
SELECT name FROM Passenger
WHERE ID_psg in
(SELECT ID_psg FROM Pass_in_trip
GROUP BY place, ID_psg
HAVING count(*)>1)
67)
SELECT count(*) FROM(
SELECT TOP 1 WITH TIES count(*) c, town_from, town_to FROM trip
GROUP BY town_from, town_to
ORDER BY c desc
) t
70)
SELECT DISTINCT o.battle FROM Outcomes o
LEFT JOIN Ships s ON s.name = o.ship
LEFT JOIN Classes c ON o.ship = c.class OR s.class = c.class
WHERE c.country IS NOT NULL
GROUP BY c.country, o.battle
HAVING COUNT(o.ship) >= 3
71)
SELECT p.maker FROM Product p
LEFT JOIN PC ON PC.model = p.model
WHERE p.type = 'PC'
GROUP BY p.maker
HAVING COUNT(p.model) = COUNT(pc.model)
73)
SELECT DISTINCT country, name FROM battles, classes c
EXCEPT
SELECT c.country, o.battle FROM outcomes o
LEFT JOIN ships s ON s.name = o.ship
LEFT JOIN classes c ON o.ship = c.class OR s.class = c.class
WHERE c.country IS NOT NULL
GROUP BY country, battle
77)
SELECT TOP 1 WITH TIES * FROM(
SELECT COUNT(DISTINCT(tr.trip_no)) Qty, tr.date FROM Trip t, Pass_in_trip tr
WHERE t.trip_no=tr.trip_no and t.town_from = 'Rostov'
GROUP BY tr.date) t1
ORDER BY t1.Qty
DESC
80)
SELECT DISTINCT maker FROM Product
WHERE maker NOT IN (
SELECT maker FROM Product
WHERE type='PC' AND model NOT IN (
SELECT model FROM PC))
81)
SELECT Outcome.* FROM Outcome 
JOIN (
SELECT TOP 1 WITH TIES YEAR(date) year, MONTH(date) month, SUM(out) total
FROM Outcome
GROUP BY YEAR(date), MONTH(date)
ORDER BY total DESC
) t ON YEAR(Outcome.date) = t.year AND MONTH(Outcome.date) = t.month
83)
SELECT name
FROM Ships s JOIN Classes c ON s.class = c.class
WHERE
CASE WHEN numGuns = 8 THEN 1 
ELSE 0 END +
CASE WHEN bore = 15 THEN 1 
ELSE 0 END +
CASE WHEN displacement = 32000 THEN 1 
ELSE 0 END +
CASE WHEN type = 'bb' THEN 1 
ELSE 0 END +
CASE WHEN launched = 1915 THEN 1 
ELSE 0 END +
CASE WHEN s.class = 'Kongo' THEN 1 
ELSE 0 END +
CASE WHEN country = 'USA' THEN 1 
ELSE 0 END > = 4
85)
SELECT maker FROM product
GROUP BY maker
HAVING COUNT(DISTINCT type) = 1 AND
(MIN(type) = 'printer' OR (MIN(type) = 'pc' AND COUNT(model) > 2))
86)
SELECT maker, 
CASE count(DISTINCT type) 
WHEN 1 THEN MIN(type) 
WHEN 2 THEN MIN(type) + '/' + MAX(type) 
WHEN 3 THEN 'Laptop/PC/Printer' END FROM Product 
GROUP BY maker
90)
SELECT maker, model, type FROM(
SELECT maker, model, type, row_number() over(ORDER BY model) first,
row_number() over(ORDER BY model desc) second
FROM Product
) t
WHERE first >3 AND second >3























